name: Deploy
on:
  push:
    branches:
      - main
      - master
  # pull_request:
  #   branches:
  #     - main
  #     - master

jobs:
  release:
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M')"
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          chmod +x ./gradlew 
          ./gradlew
          zip -r --junk-paths ${{ steps.date.outputs.date }}.zip ./build/libs/*.jar
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./${{ steps.date.outputs.date }}.zip
          asset_name: ${{ steps.date.outputs.date }}.zip
          asset_content_type: application/zip
